// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ApplicationColumns holds the columns for the "application" table.
	ApplicationColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "homepage", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "callback", Type: field.TypeString, Nullable: true},
		{Name: "admin", Type: field.TypeString, Nullable: true},
		{Name: "client_id", Type: field.TypeString, Nullable: true},
		{Name: "client_secrets", Type: field.TypeJSON, Nullable: true},
	}
	// ApplicationTable holds the schema information for the "application" table.
	ApplicationTable = &schema.Table{
		Name:       "application",
		Columns:    ApplicationColumns,
		PrimaryKey: []*schema.Column{ApplicationColumns[0]},
	}
	// AuthenticatorColumns holds the columns for the "authenticator" table.
	AuthenticatorColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeString, Nullable: true},
		{Name: "kind", Type: field.TypeInt32, Nullable: true},
		{Name: "unique", Type: field.TypeJSON, Nullable: true},
	}
	// AuthenticatorTable holds the schema information for the "authenticator" table.
	AuthenticatorTable = &schema.Table{
		Name:       "authenticator",
		Columns:    AuthenticatorColumns,
		PrimaryKey: []*schema.Column{AuthenticatorColumns[0]},
	}
	// AvatarColumns holds the columns for the "avatar" table.
	AvatarColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "kind", Type: field.TypeInt32, Nullable: true},
		{Name: "rel_id", Type: field.TypeString, Nullable: true},
		{Name: "avatar", Type: field.TypeString, Nullable: true},
	}
	// AvatarTable holds the schema information for the "avatar" table.
	AvatarTable = &schema.Table{
		Name:       "avatar",
		Columns:    AvatarColumns,
		PrimaryKey: []*schema.Column{AvatarColumns[0]},
	}
	// UserColumns holds the columns for the "user" table.
	UserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "ancestor_id", Type: field.TypeString, Nullable: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "nickname", Type: field.TypeString, Nullable: true},
		{Name: "ip", Type: field.TypeString, Nullable: true},
	}
	// UserTable holds the schema information for the "user" table.
	UserTable = &schema.Table{
		Name:       "user",
		Columns:    UserColumns,
		PrimaryKey: []*schema.Column{UserColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ApplicationTable,
		AuthenticatorTable,
		AvatarTable,
		UserTable,
	}
)

func init() {
	ApplicationTable.Annotation = &entsql.Annotation{
		Table: "application",
	}
	AuthenticatorTable.Annotation = &entsql.Annotation{
		Table: "authenticator",
	}
	AvatarTable.Annotation = &entsql.Annotation{
		Table: "avatar",
	}
	UserTable.Annotation = &entsql.Annotation{
		Table: "user",
	}
}
